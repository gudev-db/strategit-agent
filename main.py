import streamlit as st
import os
import google.generativeai as genai
from datetime import datetime

# Configura√ß√£o inicial
st.set_page_config(
    layout="wide",
    page_title="Strategic AI Agent",
    page_icon="üöÄ"
)

# Inicializar Gemini
gemini_api_key = os.getenv("GEM_API_KEY")
genai.configure(api_key=gemini_api_key)
modelo_texto = genai.GenerativeModel("gemini-1.5-flash")

# CSS personalizado
st.markdown("""
<style>
    .stTabs [data-baseweb="tab-list"] {
        gap: 8px;
        flex-wrap: wrap;
    }
    .stTabs [data-baseweb="tab"] {
        padding: 8px 16px;
        border-radius: 4px;
        white-space: nowrap;
        font-size: 14px;
        transition: all 0.2s;
        background-color: #f0f2f6;
        margin-right: 8px !important;
    }
    .stTabs [aria-selected="true"] {
        background-color: #4CAF50 !important;
        color: white !important;
        font-weight: 600;
    }
    .stButton button {
        background-color: #4CAF50;
        color: white;
        transition: all 0.3s;
    }
    .stButton button:hover {
        background-color: #45a049;
    }
    .strategy-card {
        border-radius: 8px;
        padding: 1.5rem;
        margin-bottom: 1rem;
        background-color: #f9f9f9;
        border-left: 4px solid #4CAF50;
    }
    .insight-badge {
        background-color: #ffeb3b;
        color: #333;
        padding: 4px 8px;
        border-radius: 12px;
        font-size: 0.8em;
        font-weight: bold;
        margin-right: 8px;
    }
</style>
""", unsafe_allow_html=True)

# Cabe√ßalho
st.image('https://via.placeholder.com/300x80?text=Strategic+AI+Agent', width=300)
st.title('Strategic AI Agent')
st.caption('Assistente de IA para planejamento estrat√©gico e solu√ß√£o de desafios complexos')

# Abas principais
tabs = st.tabs([
    "üîç Defini√ß√£o do Problema",
    "üìä An√°lise de Dados",
    "üí° Gera√ß√£o de Insights",
    "üõ†Ô∏è Estrat√©gias e Briefings",
    "üè∑Ô∏è Estrat√©gia de Marca",
    "üì° Comunica√ß√£o e Canais",
    "üìà M√©tricas e KPIs",
    "üë• Estrutura de Time",
    "üìä An√°lises Estrat√©gicas"
])

# 1. Defini√ß√£o do Problema
with tabs[0]:
    st.header("üîç Defini√ß√£o do Problema Estrat√©gico")
    
    col1, col2 = st.columns(2)
    with col1:
        business_context = st.text_area(
            "Contexto do Neg√≥cio*",
            placeholder="Descreva sua organiza√ß√£o, mercado e situa√ß√£o atual...",
            height=150
        )
    with col2:
        business_challenge = st.text_area(
            "Desafio Estrat√©gico*",
            placeholder="Qual problema ou oportunidade voc√™ est√° enfrentando?",
            height=150
        )
    
    if st.button("üîç Formular Tens√£o Estrat√©gica", key="btn_tensao"):
        if not business_context or not business_challenge:
            st.warning("Preencha todos os campos obrigat√≥rios")
        else:
            with st.spinner('Identificando o cerne do problema...'):
                prompt = f"""
                Com base nestas informa√ß√µes:
                
                **Contexto:** {business_context}
                **Desafio:** {business_challenge}
                
                Crie uma formula√ß√£o clara do problema como uma tens√£o estrat√©gica (paradoxo aparente) usando o formato:
                "[Grupo] quer [objetivo], mas [barreira]"
                
                Inclua:
                1. A tens√£o principal (1-2 frases)
                2. Explica√ß√£o breve do conflito (50 palavras)
                3. 3 perguntas-chave que precisam ser respondidas
                
                Sa√≠da em markdown com formata√ß√£o clara.
                """
                response = modelo_texto.generate_content(prompt)
                
                st.session_state['strategic_tension'] = response.text
                st.success("Tens√£o Estrat√©gica Identificada:")
                st.markdown(response.text)
                
                # Bot√£o para copiar
                st.download_button(
                    "üìã Copiar Formula√ß√£o",
                    data=response.text,
                    file_name=f"tensao_estrategica_{datetime.now().strftime('%Y%m%d')}.md",
                    mime="text/markdown"
                )

# 2. An√°lise de Dados
with tabs[1]:
    st.header("üìä An√°lise Combinada de Dados")
    
    if 'strategic_tension' not in st.session_state:
        st.info("‚ÑπÔ∏è Defina primeiro o problema na aba 'Defini√ß√£o do Problema'")
    else:
        st.markdown("**Tens√£o Estrat√©gica Atual:**")
        st.markdown(st.session_state['strategic_tension'])
        
        analysis_type = st.radio(
            "Tipo de An√°lise:",
            ["üìö Pesquisa Secund√°ria", "üìä Dados Quantitativos", "üó£Ô∏è Entrevista Qualitativa"],
            horizontal=True
        )
        
        if analysis_type == "üìö Pesquisa Secund√°ria":
            research_topics = st.text_area(
                "T√≥picos para Pesquisa Secund√°ria*",
                placeholder="Ex: tend√™ncias de mercado, benchmarks do setor, relat√≥rios relevantes...",
                height=100
            )
            
            if st.button("üîé Realizar Pesquisa Secund√°ria"):
                with st.spinner('Analisando dados e contextos externos...'):
                    prompt = f"""
                    Com base na tens√£o estrat√©gica:
                    {st.session_state['strategic_tension']}
                    
                    Realize uma an√°lise de pesquisa secund√°ria sobre:
                    {research_topics}
                    
                    Inclua:
                    1. 3-5 fontes confi√°veis relevantes
                    2. Principais achados (bullet points)
                    3. Como esses dados se relacionam com o problema
                    4. 2-3 hip√≥teses preliminares
                    
                    Formato: markdown com se√ß√µes claras.
                    """
                    response = modelo_texto.generate_content(prompt)
                    st.session_state['secondary_research'] = response.text
                    st.markdown(response.text)
        
        elif analysis_type == "üìä Dados Quantitativos":
            st.file_uploader("Carregar Conjunto de Dados (CSV/Excel)", type=["csv", "xlsx"])
            data_questions = st.text_area(
                "Perguntas para An√°lise Quantitativa*",
                placeholder="Que hip√≥teses voc√™ quer testar? Que rela√ß√µes investigar?",
                height=100
            )
            
            if st.button("üìà Analisar Dados Quantitativos"):
                with st.spinner('Processando dados e identificando padr√µes...'):
                    prompt = f"""
                    Com base na tens√£o estrat√©gica:
                    {st.session_state['strategic_tension']}
                    
                    Sugira uma abordagem para analisar dados quantitativos que responda a:
                    {data_questions}
                    
                    Inclua:
                    1. M√©todos estat√≠sticos recomendados
                    2. Visualiza√ß√µes sugeridas
                    3. Poss√≠veis armadilhas
                    4. Como interpretar os resultados
                    
                    Formato: markdown com exemplos.
                    """
                    response = modelo_texto.generate_content(prompt)
                    st.session_state['quantitative_analysis'] = response.text
                    st.markdown(response.text)
        
        else:  # Entrevista Qualitativa
            interview_goals = st.text_area(
                "Objetivos da Pesquisa Qualitativa*",
                placeholder="O que voc√™ quer entender sobre comportamentos, motiva√ß√µes, barreiras?",
                height=100
            )
            participant_profile = st.text_input(
                "Perfil dos Participantes*",
                placeholder="Ex: consumidores entre 25-40 anos, usu√°rios frequentes do produto..."
            )
            
            if st.button("üó£Ô∏è Gerar Roteiro de Entrevista"):
                with st.spinner('Criando guia de pesquisa qualitativa...'):
                    prompt = f"""
                    Com base na tens√£o estrat√©gica:
                    {st.session_state['strategic_tension']}
                    
                    Crie um roteiro de entrevista qualitativa para:
                    **Objetivo:** {interview_goals}
                    **Participantes:** {participant_profile}
                    
                    Inclua:
                    1. 5-7 perguntas principais (abertas)
                    2. T√©cnicas de sondagem (ex: "Pode me contar mais sobre...")
                    3. Exerc√≠cios projetivos (ex: "Se fosse um carro, qual seria?")
                    4. Como analisar as respostas
                    
                    Formato: markdown com se√ß√µes l√≥gicas.
                    """
                    response = modelo_texto.generate_content(prompt)
                    st.session_state['qualitative_guide'] = response.text
                    st.markdown(response.text)

# 3. Gera√ß√£o de Insights
with tabs[2]:
    st.header("üí° Gera√ß√£o de Insights Estrat√©gicos")
    
    if 'strategic_tension' not in st.session_state:
        st.info("‚ÑπÔ∏è Comece definindo o problema na primeira aba")
    else:
        st.markdown("**Contexto Atual:**")
        st.markdown(st.session_state['strategic_tension'])
        
        research_data = ""
        if 'secondary_research' in st.session_state:
            st.markdown("**Pesquisa Secund√°ria:**")
            st.markdown(st.session_state['secondary_research'][:500] + "...")
            research_data += f"\n\nPesquisa Secund√°ria:\n{st.session_state['secondary_research']}"
        
        if 'quantitative_analysis' in st.session_state:
            st.markdown("**An√°lise Quantitativa:**")
            st.markdown(st.session_state['quantitative_analysis'][:500] + "...")
            research_data += f"\n\nAn√°lise Quantitativa:\n{st.session_state['quantitative_analysis']}"
        
        if 'qualitative_guide' in st.session_state:
            st.markdown("**Pesquisa Qualitativa:**")
            st.markdown(st.session_state['qualitative_guide'][:500] + "...")
            research_data += f"\n\nPesquisa Qualitativa:\n{st.session_state['qualitative_guide']}"
        
        if st.button("üí° Gerar Insights Estrat√©gicos"):
            with st.spinner('Sintetizando dados em insights acion√°veis...'):
                prompt = f"""
                Com base nestas informa√ß√µes:
                **Tens√£o Estrat√©gica:** {st.session_state['strategic_tension']}
                **Dados de Pesquisa:** {research_data if research_data else "Nenhum dado adicional fornecido"}
                
                Gere 3-5 insights estrat√©gicos profundos que:
                1. Revelam padr√µes comportamentais ou culturais
                2. Explicam a raiz do problema
                3. S√£o surpreendentes ou contra-intuitivos
                4. Levam a oportunidades estrat√©gicas
                
                Formato para cada insight:
                ### [T√≠tulo do Insight]
                <span class='insight-badge'>INSIGHT</span>
                **O que √©:** [Descri√ß√£o clara]
                **Por que importa:** [Impacto no neg√≥cio]
                **Como usar:** [Aplica√ß√£o pr√°tica]
                
                Use markdown com formata√ß√£o rica.
                """
                response = modelo_texto.generate_content(prompt)
                st.session_state['strategic_insights'] = response.text
                st.markdown(response.text, unsafe_allow_html=True)

# 4. Estrat√©gias e Briefings
with tabs[3]:
    st.header("üõ†Ô∏è Desenvolvimento de Estrat√©gias")
    
    if 'strategic_insights' not in st.session_state:
        st.info("‚ÑπÔ∏è Gere insights primeiro na aba anterior")
    else:
        st.markdown("**Insights Atuais:**")
        st.markdown(st.session_state['strategic_insights'], unsafe_allow_html=True)
        
        strategy_tab1, strategy_tab2, strategy_tab3 = st.tabs([
            "üìã Op√ß√µes Estrat√©gicas",
            "‚úçÔ∏è Briefs Estrat√©gicos",
            "üéØ Frameworks"
        ])
        
        with strategy_tab1:
            if st.button("üîÑ Gerar Op√ß√µes Estrat√©gicas"):
                with st.spinner('Criando alternativas estrat√©gicas...'):
                    prompt = f"""
                    Com base nestes insights:
                    {st.session_state['strategic_insights']}
                    
                    Desenvolva 3 op√ß√µes estrat√©gicas distintas, cada uma com:
                    ### [Nome da Estrat√©gia]
                    **Ideia Central:** [1-2 frases]
                    **Pr√≥s:** [3-5 pontos fortes]
                    **Contras:** [2-3 limita√ß√µes]
                    **Melhor Para:** [Quando usar esta abordagem]
                    **Exemplo de Implementa√ß√£o:** [Caso concreto]
                    
                    As estrat√©gias devem representar abordagens fundamentalmente diferentes.
                    """
                    response = modelo_texto.generate_content(prompt)
                    st.session_state['strategy_options'] = response.text
                    st.markdown(response.text)
        
        with strategy_tab2:
            briefing_type = st.selectbox(
                "Tipo de Briefing",
                ["Client Brief (Neg√≥cio)", "Creative Brief (Criatividade)", "Tactical Brief (Execu√ß√£o)"]
            )
            
            if st.button(f"üìù Gerar {briefing_type}"):
                with st.spinner(f'Criando {briefing_type}...'):
                    prompt = f"""
                    Crie um {briefing_type} profissional com base em:
                    **Tens√£o Estrat√©gica:** {st.session_state['strategic_tension']}
                    **Insights:** {st.session_state['strategic_insights']}
                    
                    Use a estrutura:
                    ### Contexto
                    - Background
                    - Objetivo
                    - P√∫blico-alvo
                    
                    ### Desafio
                    - Problema central
                    - Barreiras
                    - Oportunidades
                    
                    ### Dire√ß√£o
                    - Tom
                    - Mensagem-chave
                    - Chamada para a√ß√£o
                    
                    ### {briefing_type.split(' ')[0]} Espec√≠ficos
                    {"[Dados de neg√≥cio e m√©tricas]" if "Client" in briefing_type else 
                     "[Inspira√ß√£o criativa e refer√™ncias]" if "Creative" in briefing_type else 
                     "[Canais, cronograma e recursos]"}
                    
                    Formato: markdown profissional.
                    """
                    response = modelo_texto.generate_content(prompt)
                    st.session_state[f'{briefing_type.lower().split()[0]}_brief'] = response.text
                    st.markdown(response.text)
        
        with strategy_tab3:
            framework = st.selectbox(
                "Framework Estrat√©gico",
                ["GET/TO/BY", "Single Minded Proposition", "Tens√£o-Insight-Ideia"]
            )
            
            if st.button(f"üñáÔ∏è Aplicar {framework}"):
                with st.spinner(f'Adaptando {framework}...'):
                    prompt = f"""
                    Aplique o framework {framework} a este cen√°rio:
                    **Tens√£o:** {st.session_state['strategic_tension']}
                    **Insights:** {st.session_state['strategic_insights']}
                    
                    {"Para GET/TO/BY, preencha:" if framework == "GET/TO/BY" else 
                     "Para SMP, defina:" if framework == "Single Minded Proposition" else 
                     "Desenvolva a narrativa:"}
                    
                    {f"""
                    ### GET/TO/BY
                    **GET** [Audi√™ncia]: 
                    **TO** [Mudan√ßa desejada]: 
                    **BY** [Meio/Mecanismo]: 
                    """ if framework == "GET/TO/BY" else 
                    f"""
                    ### Single Minded Proposition
                    **Proposi√ß√£o √önica:** [1 frase impactante]
                    **Raz√£o para Acreditar:** [3 pontos]
                    """ if framework == "Single Minded Proposition" else 
                    f"""
                    ### Tens√£o ‚Üí Insight ‚Üí Ideia
                    **Tens√£o:** [Recapitula√ß√£o]
                    **Insight Chave:** [Do research]
                    **Ideia Central:** [Solu√ß√£o criativa]
                    """}
                    
                    Formato: markdown com exemplos concretos.
                    """
                    response = modelo_texto.generate_content(prompt)
                    st.markdown(response.text)

# 5. Estrat√©gia de Marca
with tabs[4]:
    st.header("üè∑Ô∏è Estrat√©gia de Marca")
    
    brand_name = st.text_input("Nome da Marca*")
    brand_category = st.text_input("Categoria/Setor*")
    
    if brand_name and brand_category:
        brand_tab1, brand_tab2, brand_tab3 = st.tabs([
            "üîç Brand Audit",
            "ü™ú Benefit Ladder",
            "üîÆ Brand Prism"
        ])
        
        with brand_tab1:
            if st.button("üîÑ Realizar Brand Audit"):
                with st.spinner('Analisando identidade da marca...'):
                    prompt = f"""
                    Realize um Brand Audit completo para {brand_name} ({brand_category}) com 14 perguntas cr√≠ticas:
                    
                    1. **Prop√≥sito**: Por que a marca existe al√©m de lucrar?
                    2. **Posicionamento**: Como √© √∫nica na mente dos consumidores?
                    3. **Arquitetura**: Masterbrand, House of Brands ou H√≠brida?
                    4. **Valores**: Quais 3-5 valores fundamentais?
                    5. **Personalidade**: Se fosse uma pessoa, como seria?
                    6. **Visual Identity**: Elementos distintivos?
                    7. **Voz e Tom**: Como comunica?
                    8. **Experi√™ncia**: Promessa consistente em todos os pontos?
                    9. **Cultura**: Como √© internalizada na organiza√ß√£o?
                    10. **Diferencia√ß√£o**: Vantagens competitivas reais?
                    11. **Consist√™ncia**: Coer√™ncia ao longo do tempo?
                    12. **Relev√¢ncia**: Import√¢ncia para o p√∫blico-alvo?
                    13. **Flexibilidade**: Capacidade de evoluir?
                    14. **Resili√™ncia**: Como lida com crises?
                    
                    Formato: lista com respostas concisas para cada.
                    """
                    response = modelo_texto.generate_content(prompt)
                    st.markdown(response.text)
        
        with brand_tab2:
            if st.button("ü™ú Construir Benefit Ladder"):
                with st.spinner('Criando hierarquia de benef√≠cios...'):
                    prompt = f"""
                    Construa uma Benefit Ladder para {brand_name} ({brand_category}) com 4 n√≠veis:
                    
                    1. **Atributos**: Caracter√≠sticas f√≠sicas/funcionais
                    2. **Benef√≠cios Funcionais**: O que faz pelo consumidor
                    3. **Benef√≠cios Emocionais**: Como faz se sentir
                    4. **Prop√≥sito**: Impacto maior no mundo
                    
                    Exemplo:
                    | N√≠vel | Conte√∫do |
                    |-------|---------|
                    | Atributo | Bebida gaseificada com extrato de cola |
                    | Funcional | Refresca e revigora |
                    | Emocional | Promove momentos de felicidade |
                    | Prop√≥sito | Inspira otimismo e conex√£o humana |
                    """
                    response = modelo_texto.generate_content(prompt)
                    st.markdown(response.text)
        
        with brand_tab3:
            if st.button("üîÆ Definir Brand Prism"):
                with st.spinner('Desenhando identidade da marca...'):
                    prompt = f"""
                    Defina o Brand Identity Prism para {brand_name} ({brand_category}) com 6 dimens√µes:
                    
                    1. **F√≠sico**: Caracter√≠sticas tang√≠veis
                    2. **Personalidade**: Car√°ter humano
                    3. **Cultura**: Valores e origens
                    4. **Relacionamento**: Conex√£o com consumidores
                    5. **Autoimagem**: Como os usu√°rios se veem usando
                    6. **Reflexo**: Como reflete seus consumidores
                    
                    Formato: tabela markdown com exemplos.
                    """
                    response = modelo_texto.generate_content(prompt)
                    st.markdown(response.text)

# 6. Comunica√ß√£o e Canais
with tabs[5]:
    st.header("üì° Planejamento de Comunica√ß√£o")
    
    campaign_goal = st.selectbox(
        "Objetivo Principal",
        ["Awareness", "Considera√ß√£o", "Convers√£o", "Engajamento", "Fideliza√ß√£o"]
    )
    budget_range = st.selectbox(
        "Faixa de Or√ßamento",
        ["Baixo (at√© 50k)", "M√©dio (50-500k)", "Alto (500k+)"]
    )
    
    if st.button("üìÖ Gerar Plano de Comunica√ß√£o"):
        with st.spinner('Criando estrat√©gia multicanal...'):
            prompt = f"""
            Crie um plano de comunica√ß√£o completo para:
            **Objetivo:** {campaign_goal}
            **Or√ßamento:** {budget_range}
            
            Inclua:
            
            ### 1. Estrat√©gia de Conte√∫do
            - Tema central
            - Formatos priorit√°rios
            - Tom de voz
            
            ### 2. Canais Recomendados
            - Distribui√ß√£o por fase (Awareness ‚Üí Considera√ß√£o ‚Üí Convers√£o)
            - Mix ideal para o or√ßamento
            - Canais emergentes a considerar
            
            ### 3. Calend√°rio
            - Fases da campanha (teaser ‚Üí lan√ßamento ‚Üí sustenta√ß√£o)
            - Frequ√™ncia de publica√ß√£o
            - Momentos-chave
            
            ### 4. M√©tricas por Canal
            - KPIs prim√°rios
            - Benchmarks esperados
            - Ferramentas de medi√ß√£o
            
            Formato: markdown com tabelas quando aplic√°vel.
            """
            response = modelo_texto.generate_content(prompt)
            st.markdown(response.text)

# 7. M√©tricas e KPIs
with tabs[6]:
    st.header("üìà M√©tricas e Performance")
    
    goal_tab1, goal_tab2, goal_tab3 = st.tabs([
        "üìä KPIs por Objetivo",
        "üîÑ ESOV Analysis",
        "üìç Entry Points"
    ])
    
    with goal_tab1:
        business_goal = st.selectbox(
            "Selecione o Objetivo de Neg√≥cio",
            ["Awareness", "Considera√ß√£o", "Convers√£o", "Reten√ß√£o", "Upsell"],
            key="kpi_goal"
        )
        
        if st.button("üéØ Gerar Recomenda√ß√µes de KPIs"):
            with st.spinner('Selecionando m√©tricas relevantes...'):
                prompt = f"""
                Para o objetivo de {business_goal}, recomende:
                
                ### M√©tricas Prim√°rias
                - 3-5 KPIs principais
                - Benchmarks do setor
                - Como medir (ferramentas)
                
                ### M√©tricas Secund√°rias
                - Indicadores complementares
                - Sinais precoces
                - M√©tricas de qualidade
                
                ### Armadilhas Comuns
                - Vanity metrics a evitar
                - Problemas de atribui√ß√£o
                - Vi√©ses comuns
                
                Formato: markdown com tabelas comparativas.
                """
                response = modelo_texto.generate_content(prompt)
                st.markdown(response.text)
    
    with goal_tab2:
        st.info("ESOV = Share of Voice vs. Share of Market")
        market_position = st.selectbox(
            "Posi√ß√£o no Mercado",
            ["L√≠der", "Desafiante", "Seguidor", "Nicho"]
        )
        
        if st.button("üì¢ Analisar ESOV"):
            with st.spinner('Calculando rela√ß√£o voz/market share...'):
                prompt = f"""
                Para uma marca na posi√ß√£o de {market_position}, analise:
                
                ### Situa√ß√£o Ideal ESOV
                - % de Share of Voice recomendado
                - Como alocar por canal
                - Estrat√©gias para aumentar SOV
                
                ### Diagn√≥stico Atual
                - Como calcular SOV atual
                - Fontes de dados
                - Benchmarks do setor
                
                ### Estrat√©gias
                - T√°ticas para l√≠deres
                - T√°ticas para desafiantes
                - T√°ticas para nicho
                
                Formato: markdown com exemplos.
                """
                response = modelo_texto.generate_content(prompt)
                st.markdown(response.text)
    
    with goal_tab3:
        st.info("Category Entry Points = Momentos de decis√£o")
        product_category = st.text_input("Categoria de Produto", key="cep_category")
        
        if st.button("üìç Mapear Entry Points"):
            with st.spinner('Identificando momentos-chave...'):
                prompt = f"""
                Para a categoria {product_category}, identifique:
                
                ### 5-7 Principais Entry Points
                - Situa√ß√µes
                - Necessidades
                - Gatilhos mentais
                
                ### Estrat√©gias por Ponto
                - Como estar presente
                - Mensagens-chave
                - Canais priorit√°rios
                
                ### Exemplo de Mapeamento
                | Entry Point | Estrat√©gia | Exemplo |
                |------------|------------|---------|
                | [Momento]  | [T√°tica]   | [Caso]  |
                
                Formato: markdown completo.
                """
                response = modelo_texto.generate_content(prompt)
                st.markdown(response.text)

# 8. Estrutura de Time
with tabs[7]:
    st.header("üë• Planejamento de Equipe")
    
    org_size = st.selectbox(
        "Tamanho da Organiza√ß√£o",
        ["Startup (<10)", "Pequena (10-50)", "M√©dia (50-200)", "Grande (200+)"]
    )
    project_scope = st.selectbox(
        "Escopo do Projeto",
        ["Campanha", "Lan√ßamento", "Transforma√ß√£o", "Opera√ß√£o Cont√≠nua"]
    )
    
    if st.button("üëî Recomendar Estrutura"):
        with st.spinner('Desenhando equipe ideal...'):
            prompt = f"""
            Para uma organiza√ß√£o {org_size} trabalhando em {project_scope}, recomende:
            
            ### Equipe Essencial
            - Fun√ß√µes cr√≠ticas
            - Aloca√ß√£o (% tempo)
            - Habilidades-chave
            
            ### Modelo de Opera√ß√£o
            - Estrutura (centralizada x descentralizada)
            - Processos de aprova√ß√£o
            - Ferramentas colaborativas
            
            ### Carga de Trabalho
            - FTE necess√°rio
            - Picos esperados
            - Necessidade de parceiros
            
            ### Cultura Recomendada
            - Valores de equipe
            - Ritmos (sprints, revis√µes)
            - M√©tricas internas
            
            Formato: markdown com organograma sugerido.
            """
            response = modelo_texto.generate_content(prompt)
            st.markdown(response.text)

# 9. An√°lises Estrat√©gicas
with tabs[8]:
    st.header("üìä An√°lises Estrat√©gicas")
    
    analysis_type = st.radio(
        "Tipo de An√°lise",
        ["SWOT", "PESTLE", "Oportunidades/Amea√ßas"],
        horizontal=True
    )
    
    if analysis_type == "SWOT":
        company_overview = st.text_area("Vis√£o Geral da Empresa", height=100)
        
        if st.button("üìã Gerar An√°lise SWOT"):
            with st.spinner('Desenvolvendo matriz SWOT...'):
                prompt = f"""
                Crie uma an√°lise SWOT detalhada para:
                {company_overview}
                
                **For√ßas:**
                - 3-5 vantagens internas
                - Como sustentar
                
                **Fraquezas:**
                - 3-5 limita√ß√µes internas
                - Como mitigar
                
                **Oportunidades:**
                - 3-5 fatores externos positivos
                - Como capitalizar
                
                **Amea√ßas:**
                - 3-5 riscos externos
                - Como preparar
                
                **Matriz de Prioriza√ß√£o:**
                | Crit√©rio | Impacto | Probabilidade | Prioridade |
                |----------|---------|---------------|------------|
                | [Item]   | [Alto/M√©dio/Baixo] | [Alta/M√©dia/Baixa] | [1-5] |
                
                Formato: markdown completo.
                """
                response = modelo_texto.generate_content(prompt)
                st.markdown(response.text)
    
    elif analysis_type == "PESTLE":
        industry = st.text_input("Setor/Ind√∫stria")
        
        if st.button("üåç Gerar An√°lise PESTLE"):
            with st.spinner('Analisando fatores macro...'):
                prompt = f"""
                Realize an√°lise PESTLE para o setor {industry}:
                
                **Pol√≠ticos:**
                - 3-5 fatores
                - Impacto potencial
                
                **Econ√¥micos:**
                - 3-5 fatores
                - Impacto potencial
                
                **Sociais:**
                - 3-5 fatores
                - Impacto potencial
                
                **Tecnol√≥gicos:**
                - 3-5 fatores
                - Impacto potencial
                
                **Legais:**
                - 3-5 fatores
                - Impacto potencial
                
                **Ambientais:**
                - 3-5 fatores
                - Impacto potencial
                
                **Recomenda√ß√µes:**
                - Como se preparar
                - Sinais de mudan√ßa
                
                Formato: markdown com tabela resumo.
                """
                response = modelo_texto.generate_content(prompt)
                st.markdown(response.text)
    
    else:
        market_trends = st.text_area("Tend√™ncias de Mercado", height=100)
        
        if st.button("üîÆ Identificar Oportunidades/Amea√ßas"):
            with st.spinner('Analisando cen√°rio futuro...'):
                prompt = f"""
                Com base nestas tend√™ncias:
                {market_trends}
                
                Identifique:
                
                ### 3-5 Oportunidades Estrat√©gicas
                - Descri√ß√£o
                - Janela de tempo
                - Recursos necess√°rios
                - Casos an√°logos
                
                ### 3-5 Amea√ßas Potenciais
                - Natureza do risco
                - Probabilidade
                - Sinais de alerta
                - Planos de conting√™ncia
                
                **Matriz de Prioriza√ß√£o:**
                | Item | Impacto | Prepara√ß√£o | A√ß√£o Recomendada |
                |------|---------|------------|------------------|
                | [O/A] | [1-5] | [1-5] | [Diretriz] |
                
                Formato: markdown completo.
                """
                response = modelo_texto.generate_content(prompt)
                st.markdown(response.text)

# Rodap√©
st.markdown("---")
st.caption("Strategic AI Agent v1.0 ¬∑ Ferramenta para planejamento estrat√©gico avan√ßado")
